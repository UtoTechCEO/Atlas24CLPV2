---
// layouts/Baselayout.astro
const { title, description, canonical } = Astro.props;
---
<html lang="de-CH">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- SEO -->
    <title>{title}</title>
    {description && <meta name="description" content={description} />}
    {canonical && <link rel="canonical" href={canonical} />}

    <!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-MBDTD2XG');</script>
<!-- End Google Tag Manager -->

    
    <!-- Performance hints -->

    <link rel="preconnect" href="https://consent.cookiebot.com" crossorigin>
    <link rel="preconnect" href="https://www.googletagmanager.com" crossorigin>
    <link rel="preconnect" href="https://www.clarity.ms" crossorigin>

    <!-- Seiten-spezifische Head-Inhalte (hier kommt das Preload aus der Seite rein) -->
    <slot name="head" />

    <!-- Formular-Logik: schnell, aber nicht render-blockend -->
    <script src="/assets/atlui_form_mobile.js" defer data-cookieconsent="functionality"></script>

    <!-- Cookiebot: Auto Blocking -->
    <script 
      id="Cookiebot"
      src="https://consent.cookiebot.com/uc.js"
      data-cbid="decc716e-21fc-495c-8d28-ddbcfefa21df"
      data-blockingmode="auto"
      type="text/javascript">
    </script>

    <!-- Consent Mode v2 – Default Settings -->
    <script data-cookieconsent="ignore">
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); }


      gtag("consent", "default", {
        ad_personalization: "denied",
        ad_storage: "denied",
        ad_user_data: "denied",
        analytics_storage: "denied",
        functionality_storage: "denied",
        personalization_storage: "denied",
        security_storage: "granted",
        wait_for_update: 500
      });

      gtag("set", "ads_data_redaction", true);
      gtag("set", "url_passthrough", false);
    </script>

    <!-- Consent Mode Update bei Zustimmung -->
<script is:inline>
  function loadGtag() {
    if (!window.Cookiebot || !window.Cookiebot.consents?.marketing) {
      console.warn("[gtag] Kein Consent für Marketing – gtag.js wird nicht geladen");
      return;
    }

    console.log("[gtag] Consent vorhanden – gtag.js wird geladen");

    const s = document.createElement("script");
    s.src = "https://www.googletagmanager.com/gtag/js?id=AW-17057503111";
    s.async = true;
    document.head.appendChild(s);

    s.onload = () => {
      console.log("[gtag] gtag.js geladen");
      window.dataLayer = window.dataLayer || [];
      window.gtag = function () { dataLayer.push(arguments); };

      gtag('js', new Date());
      gtag('config', 'G-0XGGB6GEL6', { anonymize_ip: true });
      gtag('config', 'AW-17057503111');

      if (window.location.pathname === "/validate_phone_number/") {
        gtag('event', 'conversion', {
          send_to: 'AW-17057503111',
          value: 200,
          currency: 'CHF'
        });
        console.log("[gtag] Conversion Event ausgelöst");
      }
    };
  }

  // Consent sofort prüfen, wenn schon gesetzt
  window.addEventListener("CookiebotOnLoad", () => {
    console.log("[Cookiebot] geladen");
    if (window.Cookiebot.consents?.marketing) {
      loadGtag();
    }
  });

  // Fallback: explizit auf Declaration warten (für neue Besucher)
  window.addEventListener("CookieConsentDeclaration", () => {
    console.log("[Cookiebot] Declaration Event");
    if (window.Cookiebot.consents?.marketing) {
      loadGtag();
    }
  });
</script>




    <!-- Microsoft Clarity (CH-konform, kein Consent nötig bis 31.10.2025) -->
    <script is:inline>
      (function(c,l,a,r,i,t,y){
        c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
        t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
        y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
      })(window, document, "clarity", "script", "qbxet7g0ua");
    </script>

<!-- Microsoft Advertising Converrsion Tracking -->
    <script>
(function (w, d, t, r, u) {
    var f, n, i;
    w[u] = w[u] || [];

    f = function () {
        var o = {
            ti: "343208329",
            enableAutoSpaTracking: true
        };
        o.q = w[u];
        w[u] = new UET(o);
        w[u].push("pageLoad");
    };

    n = d.createElement(t);
    n.src = r;
    n.async = 1;
    n.onload = n.onreadystatechange = function () {
        var s = this.readyState;
        if (!s || s === "loaded" || s === "complete") {
            f();
            n.onload = n.onreadystatechange = null;
        }
    };

    i = d.getElementsByTagName(t)[0];
    i.parentNode.insertBefore(n, i);

})(window, document, "script", "//bat.bing.com/bat.js", "uetq");
</script>


<!-- Howto-Sektion -->
<link
  rel="stylesheet"
  href="/css/Howto.css"
  media="print"
  onload="this.media='all'"
  >

<!-- Trust-Sektion -->
<link
  rel="stylesheet"
  href="/css/Trust.css"
  media="print"
  onload="this.media='all'"
>

<!-- USP -->
<link
  rel="stylesheet"
  href="/css/Usp.css"
  media="print"
  onload="this.media='all'"
>

<!-- Stickycta -->
<link
  rel="stylesheet"
  href="/css/Stickycta.css"
  media="print"
  onload="this.media='all'"
>

<!-- Footer -->
<link
  rel="stylesheet"
  href="/css/Footer.css"
  media="print"
  onload="this.media='all'"
>

<link rel="icon" href="/images/favicon.png" type="image/png" />




  </head>

  <body>

    <slot />

    <script is:inline>
(function () {
  let mapsPromise = null;

  function haveConsent() {
    try {
      // Für Autocomplete reicht i.d.R. "functionality".
      return !window.Cookiebot || (Cookiebot.consents && Cookiebot.consents.functionality);
    } catch (e) { return true; }
  }

  function loadMapsOnce() {
    if (window._mapsLoaded) return Promise.resolve();
    if (mapsPromise) return mapsPromise;

    mapsPromise = new Promise((resolve, reject) => {
      if (!haveConsent()) {
        console.warn('[Maps] Kein (funktionaler) Consent – Maps werden nicht geladen.');
        return reject(new Error('No consent'));
      }

      // Falls ATLUI_GLOBALS noch nicht existiert, Stub bereitstellen
      window.ATLUI_GLOBALS = window.ATLUI_GLOBALS || { init_places: function () {} };

      const s = document.createElement('script');
      s.src = "https://maps.googleapis.com/maps/api/js?key=AIzaSyBVdRCngXIz2iJbQluDmu6zWNIEc-rhfR8&libraries=places&callback=ATLUI_GLOBALS.init_places";
      s.async = true;
      s.onload = () => { window._mapsLoaded = true; resolve(); };
      s.onerror = (e) => { console.error('[Maps] Ladefehler', e); reject(e); };
      document.head.appendChild(s);
    });

    return mapsPromise;
  }

  // 1) Laden, sobald Schritt 2 sichtbar wird
  const mo = new MutationObserver(() => {
    const step2 = document.querySelector('[data-step-index="2"]');
    if (step2 && !step2.classList.contains('atlui_hidden')) {
      mo.disconnect();
      loadMapsOnce();
    }
  });
  mo.observe(document.documentElement, { childList: true, subtree: true });

  // 2) Alternativ/zusätzlich: Laden bei Fokus auf Adressfelder
  const addressIds = new Set(['MoveFromAddrStreet','MoveToAddrStreet','MoveFromAddrCity','MoveToAddrCity']);
  document.addEventListener('focusin', (e) => {
    if (e.target && addressIds.has(e.target.id)) loadMapsOnce();
  });

  // Optional: manuell von irgendwo triggern
  window.ATLUI_LOAD_MAPS = loadMapsOnce;
})();
</script>

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-MBDTD2XG"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->

  </body>
</html>
